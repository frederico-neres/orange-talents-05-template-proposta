
server.port=8080

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/root}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/master}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/master/protocol/openid-connect/certs}


### External APIs ###
service.proposta.solicitacao=${SERVICE_PROPOSTA_SOLICITACAO:http://localhost:9999/api/solicitacao}
service.proposta.cartao=${SERVICE_PROPOSTA_CARTAO:http://localhost:8888/api}

### Spring Boot Actuator ###
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,metrics,prometheus


management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servi√ßo de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}